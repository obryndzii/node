name: master-CI
on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'master'
  workflow_dispatch:

jobs:
  build:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.ECR_NODE }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHubActions
      -
        name: Run test
        run: |
          aws sts get-caller-identity
      -
        name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ECR_NODE }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      -
        name: Check master
        if: ${{ github.ref == 'refs/heads/master' }}
        run: echo 'Master branch'
      -
        name: Check tags
        if: ${{ github.ref_type == 'tag' }}
        run: echo 'Tagged branch'
        
      - 
        uses: actions/checkout@v2
        with:
          repository: 'obryndzii/btt-helm-charts'
          ref: 'refs/heads/master'
          path: 'charts'
          token: ${{ secrets.PAT }}
      -
        name: helm
        env:
          KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          aws sts get-caller-identity 
          # curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
          # chmod +x ./aws-iam-authenticator
          # mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
          # echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
          # aws-iam-authenticator token -i btt-X8XQ
          echo "${KUBE_CONFIG}" > ./kubeconfig
          curl -fsSL -o helm.tar.gz https://get.helm.sh/helm-v3.7.2-linux-amd64.tar.gz
          tar xvf helm.tar.gz
          #          aws eks update-kubeconfig --name btt-X8XQ --region eu-central-1
          ./linux-amd64/helm list --kubeconfig kubeconfig
          ./linux-amd64/helm upgrade --install node-app charts/node-app --namespace prod --kubeconfig kubeconfig
#      - uses: actions/checkout@v2
#        with:
#          repository: 'obryndzii/btt-helm-charts'
#          ref: 'refs/heads/master'
#          path: 'charts'
#          token: ${{ secrets.PAT }}
#      - name: 'Deploy'
#        uses: 'obryndzii/helm@master'
#        with:
#          #helm: 'helm3'
#          #repository: 'https://github.com/obryndzii/btt-helm-charts'
#          release: 'nginx'
#          namespace: 'default'
#          chart: 'app'
#          #          token: '${{ secrets.PAT }}'
##          values: |
##            name: foobar
##          value-files: >-
##          [
##            "values.yaml", 
##            "values.production.yaml"
##          ]
#        env:
#          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
#      - uses: actions/checkout@v2
#        with:
#          repository: 'obryndzii/btt-helm-charts'
#          ref: 'refs/heads/master'
#          path: 'charts'
#          token: ${{ secrets.PAT }}
#      - uses: actions/checkout@v2
#        with:
#          repository: 'obryndzii/btt-docker-images'
#          ref: 'refs/heads/master'
#          path: 'images'
#          token: ${{ secrets.PAT }}
